""" Notes from Coursera: 
    Using Python to Access Web Data
    """

import socket

# Initialize socket, with options for "internet" and "stream" mode that will probably never change
# this can be seen as our end of the connection
mysock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Extablish connection to host, at a certain port number
# This is the server end of the socket
mysock.connect( ('www.py4inf.com', 80) )

""" Common ports numbers:
    Talnet (23): login
    SSH (22):    Secure Login
    HTTP (80):   web
    HTTPS (443): secure web
    SMTP (25):   Mail
    IMAP (143/220/993): Mail
    POP (109/110): Mail retrieval
    DNS (53):    Domain name
    FTP (21):    File Transfer
    """

""" Uniform Resource Locator (URL): 
    protocol: host/ document
    https://www.youtube.com/watch?v=x2GILq59rl....
    
    Request Responce Cycle:
    When you click on a link, you can see the URL
    the browser creates a socket connection, makes a request, 
    for example on port 80,
    the next web page is the response.
    
    The browser is also in charge of displaying the (e.g. HTML) code 
    """
    
"""You could do the same thing using the command telnet at the command line:
    telnet www.dr-chuck.com 80
    GET http://www.dr-chuck.com/page1.htm HTTP/1.0
    
    You need an empty line, and you would get back a response, with a header, and the HTML code.
    It's very simple because it's not protected... HTTPS is not that easy.
    
    Actually when you load a full page this cycle happens many times! To retrieve different parts (HTML; CSS; ...)
    like 20 requests.. that is why it takes time to load a page sometimes... 
    """
    


